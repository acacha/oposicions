#include <stdlib.h>;


//Estructures de dades

typedef struct distancia DISTANCIA;

struct distancia {
	int dist;
	int nodeAnterior;
};

typedef struct aresta ARESTA;

struct aresta {
	int nodevei;
	int pes;
};

int main(int argc, char **argv) {

	//Iniciar el graf
	//Paràmetres:
	//argv[1]= nº de nodes
	//Per cada node la seva llista d'adjacències (pesos als veins) parella: vei distancia
	//argv[2]=nº de node inicial
	//argv[3]= nº de veins del primer node. Els veins estan ordenats
	//argv[4] vegades:
	// argv[5] nº node vei 1
	// argv[6] pes node vei 2
	// argv[7] nº node vei 2
	// argv[8] pes node vei 2
	// ...
	
	int nodeinicial,nnodes,i;
	DISTANCIA *distancies; //On guardarem el resultat de l'agorismes de Dijkstra
	
	nnodes=atoi(argv[1]);
	nodeinicial=atoi(argv[2]);
	
	distancies=(DISTANCIA*) malloc(sizeof(DISTANCIA)*nnodes);
	
	for (i = 0; i < nnodes; ++i) {
		distancies[i].
	}
	
	
	
	
	free=(DISTANCIA*);
	
}

void mostrarGraf() {
	
}


